//相手がsign out(強制終了した場合でも) した場合にサーバにその情報を送信すること

//player情報をサーバから送信するデータの最初にtypeいれる。

//戦績検索のときプレイヤー名は部分一致検索じゃなくて完全一致検索

//戦績表示は直近５０とかに、oppositeをplayer名に

//login成功の11のあとに本人情報つなげる

//サーバからの送信データの最初にすべて種類区別の数字をつける。

task:
//戦績表示部分のレイアウト

//現在login のplayer を更新できるボタンの追加
//現在オファーをうけている数をボタンで表示する

//文字のフォントどうするか

//SEND_NOW_PLAYER（３） でlogin playerは 30~ all player は 31~とあるが、login playerしかいらないので3だけでよい

//SEND_NOW_PLAYER（３）で今対戦中（つまり -1以外？）のときはそもそもクライアントに送信しないようにする

勝利数など桁数そろえたほうがきれいか？

//サーバから切断されたときにどうするか

//オファーを送信した後で、受信側が返事せずに切断した場合はどうするか
//サーバと切断が切れましたを取得

//特定の人にオファーが来てる情報（複数も）をサーバ側が保存する。そして、一つ選んだ場合ほかのオファーの人にキャンセル送信できるように （編集済み）

//オファーを送ってた側がキャンセルした場合の旨を伝える必要あり

//マッチング成立したら、オファーした側にも受けた側にも　81+黒(1)白(2)情報+相手のID （編集済み）
対戦中に相手が切断する場合は自分の手番じゃなくてもおこりうる

receivehandlerちゃんとなってるか


//panelName　不必要か？

//receiver.javaでprintWriter.flush();あるのとないととまちまち

//id passに/が入ってないかの確認

//対戦時間の追加

//同じ人が２つ起動したときのキャンセル

//オファー2人以上に送れないように

logout したときにmynumber 変更されない

//login 人数ふえたら(logout人数)server側に表示（更新）

試合終わった後ボタンでもどるとき自分の戦績更新、whereIs=2に、

result.txtに書き込む形式　3個目の項目はid1の結果
id1/id2/lose/win
id1/id2/earlyLose/win
id1/id2/draw



jend 変更点

        jend.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {//_click_event
				client.sendMessage("4");
				client.changePanel(2,1);
			}
		});





receiver320行付近に追加


									server.receiver.get(decidedOppositeNum).receiveOfferPlayer.clear();//相手のオファーされている配列もクリア
									server.receiver.get(decidedOppositeNum).setWhereIs(4);


お互いにオファー送りあってるときにはマッチング


private publicなどの確認